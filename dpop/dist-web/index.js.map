{"version":3,"file":"index.js","sources":["../dist-src/base64url.js","../dist-src/algs.js","../dist-src/jwt.js","../dist-src/jti.js","../dist-src/dpop.js","../dist-src/generate.js"],"sourcesContent":["function encode(input) {\n    const base64string = btoa(String.fromCharCode.apply(0, input));\n    return base64string.replace(/=/g, \"\").replace(/\\+/g, \"-\").replace(/\\//g, \"_\");\n}\nfunction decode(input) {\n    input = input.replace(/-/g, \"+\").replace(/_/g, \"/\").replace(/\\s/g, \"\");\n    return new Uint8Array(Array.prototype.map.call(atob(input), (c) => c.charCodeAt(0)));\n}\nexport { encode, decode };\n","const rsa = (rest) => ({\n    modulusLength: 2048,\n    publicExponent: new Uint8Array([0x01, 0x00, 0x01]),\n    ...rest,\n});\nconst ps = (hash) => rsa({ name: \"RSA-PSS\", hash: { name: `SHA-${hash}` }, saltLength: hash / 8 });\nconst rs = (hash) => rsa({ name: \"RSASSA-PKCS1-v1_5\", hash: { name: `SHA-${hash}` } });\nconst es = (hash, namedCurve) => ({\n    name: \"ECDSA\",\n    namedCurve,\n    hash: { name: `SHA-${hash}` },\n});\nconst algs = {\n    PS256: ps(256),\n    PS384: ps(384),\n    PS512: ps(512),\n    RS256: rs(256),\n    RS384: rs(384),\n    RS512: rs(512),\n    ES256: es(256, \"P-256\"),\n    ES384: es(384, \"P-384\"),\n    ES512: es(512, \"P-521\"),\n};\nexport default (alg) => {\n    if (!(alg in algs)) {\n        throw new TypeError(\"unrecognized or unsupported JWS algorithm\");\n    }\n    return algs[alg];\n};\n","import * as base64url from \"./base64url\";\nimport alg from \"./algs\";\nconst utf8ToUint8Array = (str) => base64url.decode(btoa(unescape(encodeURIComponent(str))));\nasync function JWT(privateKey, header, payload) {\n    const p = JSON.stringify(payload);\n    const h = JSON.stringify(header);\n    const partialToken = [\n        base64url.encode(utf8ToUint8Array(h)),\n        base64url.encode(utf8ToUint8Array(p)),\n    ].join(\".\");\n    const messageAsUint8Array = utf8ToUint8Array(partialToken);\n    const signature = await crypto.subtle.sign(alg(header.alg), privateKey, messageAsUint8Array);\n    const signatureAsBase64 = base64url.encode(new Uint8Array(signature));\n    return `${partialToken}.${signatureAsBase64}`;\n}\nexport default JWT;\n","const charset = \"_-0123456789aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ\";\nexport default () => {\n    let size = 21;\n    var id = \"\";\n    var bytes = crypto.getRandomValues(new Uint8Array(size));\n    while (0 < size--) {\n        id += charset[bytes[size] & 63];\n    }\n    return id;\n};\n","import JWT from \"./jwt\";\nimport jti from \"./jti\";\nimport * as base64url from \"./base64url\";\nconst iat = () => (Date.now() / 1000) | 0;\nasync function toJWK(publicKey) {\n    const { kty, x, y, e, n, crv } = await crypto.subtle.exportKey(\"jwk\", publicKey);\n    return { kty, x, y, e, n, crv };\n}\nexport default async (keypair, alg, htu, htm, accessToken, additional) => {\n    const jwk = await toJWK(keypair.publicKey);\n    return JWT(keypair.privateKey, { typ: \"dpop+jwt\", alg, jwk }, {\n        ...additional,\n        iat: iat(),\n        jti: jti(),\n        htu,\n        htm,\n        ath: accessToken\n            ? base64url.encode(new Uint8Array(await crypto.subtle.digest({ name: \"SHA-256\" }, new TextEncoder().encode(accessToken))))\n            : undefined,\n    });\n};\n","import subtleAlg from \"./algs\";\nasync function generateKeyPair(alg) {\n    const algorithm = subtleAlg(alg);\n    return crypto.subtle.generateKey(algorithm, false, [\"sign\"]);\n}\nexport default generateKeyPair;\n"],"names":["base64url.decode","base64url.encode","alg"],"mappings":"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"}